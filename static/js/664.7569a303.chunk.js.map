{"version":3,"file":"static/js/664.7569a303.chunk.js","mappings":"6NAiEA,UArDA,WACE,IAAMA,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SAAf,IAC7BI,GAAWH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAf,IAC5BC,GAAQJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,KAAf,IAE/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACS,OAAbX,GACFS,EAAS,YAEZ,GAAE,CAACT,EAAUS,KAQZ,4BACE,mCACCb,IAAa,SAAC,IAAD,IACbK,IAAS,kCAAUA,MACpB,kBAAMW,SAVW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAW,CAAEZ,MAAAA,EAAOE,SAAAA,GAC1BE,GAASS,EAAAA,EAAAA,IAAMD,GAChB,EAMG,WACE,uCAEE,kBACEE,KAAK,QACLC,MAAOf,EACPgB,UAAQ,EACRC,SAAU,SAAAP,GAAK,OAAIT,EAASS,EAAMQ,OAAOH,MAA1B,QAGnB,0CAEE,kBACED,KAAK,WACLC,MAAOb,EACPc,UAAQ,EACRC,SAAU,SAAAP,GAAK,OAAIP,EAAYO,EAAMQ,OAAOH,MAA7B,QAGnB,mBAAQD,KAAK,SAASK,SAAU1B,EAAhC,yBAMP,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logIn } from 'redux/user/userSlice';\n\n// import { loginUserRequest } from 'redux/user/userSlice';\n\n\n\nfunction LoginPage() {\n  const isLoading = useSelector(state => state.auth.isLoading);\n  const userData = useSelector(state => state.auth.userData);\n  const error = useSelector(state => state.auth.error);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (userData !== null) {\n      navigate('/contacts');\n    }\n  }, [userData, navigate]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = { email, password };\n    dispatch(logIn(formData));\n  };\n  return (\n    <div>\n      <h1>Log In</h1>\n      {isLoading && <Loader />}\n      {error && <p>error={error}</p>}\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            value={email}\n            required\n            onChange={event => setEmail(event.target.value)}\n          />\n        </label>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            required\n            onChange={event => setPassword(event.target.value)}\n          />\n        </label>\n        <button type=\"submit\" disabled={isLoading}>\n          Log In\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"names":["isLoading","useSelector","state","auth","userData","error","useState","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","useEffect","onSubmit","event","preventDefault","formData","logIn","type","value","required","onChange","target","disabled"],"sourceRoot":""}