{"version":3,"file":"static/js/418.c2bcf925.chunk.js","mappings":"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","sources":["components/Message/Message.module.css","components/Message/Message.jsx","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.module.css","redux/contacts/selectors.js","components/Filter/Filter.module.css","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","hoc/WithAuthRedirect.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport css from '../Message/Message.module.css';\n\nexport function Message({ text }) {\n  return (\n    <div>\n      <p className={css.text}>{text}</p>\n    </div>\n  );\n}\n\nMessage.prototype = { text: PropTypes.string.isRequired };","// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContactsRequest, getContactsRequest } from 'redux/contacts/contactsSlice';\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  useEffect(() => {\n    dispatch(getContactsRequest())\n  }, [dispatch]);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n   const change = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const { name, number } = formData;\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const contactPresent = contacts.filter(\n      ({ name: currentName }) =>\n        currentName.toLowerCase() === name.toLowerCase()\n    );\n\n    if (contactPresent.length) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {...formData }\n    dispatch(addContactsRequest(newContact)); \n    reset();\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      number: '',\n    });\n  };\n\n\n\n  return (\n      <form onSubmit={onSubmit} className={css.section}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={change}\n            required\n          />\n        </label>\n       <span> </span>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={change}\n            required\n          />\n        </label>\n        <button className={css.addBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }","// extracted by mini-css-extract-plugin\nexport default {};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const selectFilterContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n)}\n);","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n    const onChange = e => {\n      dispatch(setFilter(e.target.value));\n    }\n  return (\n    <div>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          onChange={onChange}\n          value={filter}\n          type=\"text\"\n        />\n      </label>\n    </div>\n  );\n};","import Loader from 'components/Loader/Loader';\nimport { Message } from 'components/Message/Message';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContactsRequest,\n  getContactsRequest, } from 'redux/contacts/contactsSlice';\nimport css from './ContactsPage.module.css';\nimport { Filter } from 'components/Filter/Filter';\nimport WithAuthRedirect from 'hoc/WithAuthRedirect';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  const userData = useSelector(state => state.auth.userData);\n  const filter = useSelector(state => state.contacts.filter);\n\n  \n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n  );\n\n  useEffect(() => {\n    if (userData === null) return;\n    dispatch(getContactsRequest());\n  }, [userData, dispatch]);\n\n\n  return (\n    <>\n      <ul>\n        {isLoading && <Loader />}\n        {error && <p>error={error}</p>}\n        <ContactForm />\n        <br />\n        <Filter />\n        {Array.isArray(filteredContacts) && filteredContacts.length === 0 && (\n          <Message text=\"Contact list is empty.\" />\n        )}\n        {Array.isArray(contacts) &&\n          filteredContacts.map(({ id, name, number }) => {\n            return (\n              <li className={css.item} key={id}>\n              \n                <h3>{name}</h3>\n                <p>{number}</p>\n                <button\n                  type=\"submit\"\n                  onClick={() => dispatch(deleteContactsRequest(id))}\n                >\n                  Delete Contact\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n\nconst ProtectedContactsPage = WithAuthRedirect(ContactsPage, \"/loginPage\");\n\nexport default ProtectedContactsPage;\n\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ProtectedComponent = (props) => {\n    const userData = useSelector(state => state.auth.userData);\n    \n    return userData !== null ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n  return ProtectedComponent;\n}\n\nexport default WithAuthRedirect;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Message","text","className","css","prototype","PropTypes","ContactForm","dispatch","useDispatch","contacts","useSelector","state","useEffect","getContactsRequest","useState","name","number","formData","setFormData","change","e","target","value","prevState","reset","onSubmit","preventDefault","filter","toLowerCase","length","alert","newContact","addContactsRequest","type","pattern","title","onChange","required","getFilter","createSelector","contact","includes","Filter","setFilter","Component","navigateTo","props","auth","userData","to","WithAuthRedirect","isLoading","error","filteredContacts","trim","Loader","Array","isArray","map","id","onClick","deleteContactsRequest","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}